{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          order_id as string,",
				"          customer_id as string,",
				"          order_status as string,",
				"          order_purchase_timestamp as string,",
				"          order_approved_at as string,",
				"          order_delivered_carrier_date as string,",
				"          order_delivered_customer_date as string,",
				"          order_estimated_delivery_date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          order_id,",
				"          customer_id,",
				"          order_status",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(order_status==\"delivered\") ~> filter1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          NAME as string,",
				"          AGE as string,",
				"          EXPERIENCE as string,",
				"          SALARY as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          NAME = order_id",
				"     )) ~> sink2"
			]
		}
	}
}